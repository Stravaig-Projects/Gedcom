@using System.Globalization
@using Stravaig.Gedcom
@using Stravaig.Gedcom.Model
@using Stravaig.Gedcom.Model.Extensions

<h1>Upload a GEDCOM file to start</h1>
<InputFile OnChange="HandleFileSelectedAsync" />

@if (_isLoading)
{
  <div class="alert alert-info" role="alert">
    <i class="fas fa-cog fa-spin"></i>
    Loading file
    @if (_file != null)
    {
      @_file.Name
    }
    else
    {
      <text>...</text>
    }
  </div>
}

@if (Database != null)
{
  <p>Number of people: @Database.IndividualRecords.Count</p>
}
@if (_hasError)
{
  <div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Can't load the file!</h4>
    @if (_file == null)
    {
      <p>I don't have a file to upload.</p>
    }
    else
    {
      <p>The file <strong>@_file.Name</strong> is not a valid GEDCOM file.</p>
    }
    @if (_exception != null)
    {
      <hr />
      <p>@_exception.Message</p>
      <environment include="Development">
        <pre>@_exception</pre>
      </environment>
    }
  </div>
}

@code{

  [Parameter]
  public GedcomDatabase Database { get; set; } = null;

  [Parameter]
  public EventCallback<GedcomDatabase> DatabaseChanged { get; set; }

  IFileListEntry _file;
  bool _hasError = false;
  bool _isLoading = false;
  Exception _exception;

  async Task HandleFileSelectedAsync(IFileListEntry[] files)
  {
    _isLoading = true;
    _exception = null;
    _hasError = false;
    _file = files.FirstOrDefault();
    if (_file == null || !_file.Name.EndsWith(".ged", true, CultureInfo.InvariantCulture))
    {
      _hasError = true;
    }
    else
    {
      try
      {
        GedcomSettings.LineLength = LineLengthSettings.ValueUpTo255;
        var localDatabase = new GedcomDatabase();
        await localDatabase.PopulateAsync(_file.Data);
        Database = localDatabase;
        await DatabaseChanged.InvokeAsync(Database);
      }
      catch (Exception ex)
      {
        _hasError = true;
        _exception = ex;
        Database = null;
      }
    }
    _isLoading = false;
  }

}